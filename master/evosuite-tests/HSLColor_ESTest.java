/*
 * This file was automatically generated by EvoSuite
 * Sat Aug 19 11:12:31 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HSLColor_ESTest extends HSLColor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(606, 606, 606, 0.2418182F);
      assertEquals(146, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(0, 1, 0, 1);
      assertEquals(1, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend(21, 21, 21, 0.0F);
      assertEquals(0, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.brighten(1618.7F);
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.brighten(0.0F);
      assertEquals(0, hSLColor0.getRed());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setLuminence(510);
      hSLColor0.brighten(1618.7F);
      assertEquals(255, hSLColor0.getLuminence());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setLuminence((-1));
      assertEquals(0, hSLColor0.getGreen());
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation(2829);
      assertEquals(255, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation((-1805));
      assertEquals(0, hSLColor0.getGreen());
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation(21);
      assertEquals(21, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setHue(1497);
      assertEquals(222, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(1, (-1805), 1359);
      hSLColor0.setHue((-1805));
      assertEquals((-1809), hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-1112), 1, 4512);
      assertEquals(4512, hSLColor0.getLuminence());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(0, (-3518), (-2674));
      assertEquals((-2674), hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(1, (-1805), 1359);
      hSLColor0.brighten(1);
      assertEquals(194, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(0, 610, 0);
      assertEquals(610, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getHue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getGreen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getRed();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getSaturation();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getLuminence();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.reverseColor();
      assertEquals(127, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getBlue();
      assertEquals(0, int0);
  }
}
