/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 17 11:24:34 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HSLColor_ESTest extends HSLColor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend((-833), 1, (-1814), 2021.0F);
      assertEquals(1, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.blend((-1), (-1), (-1), 0.0F);
      assertEquals(0, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB((-1926), (-1926), (-2985));
      hSLColor0.brighten((-1305.7402F));
      assertEquals(255, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-1814), 2597, 2408);
      hSLColor0.brighten((-135.957F));
      assertEquals((-1814), hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.brighten(0.0F);
      assertEquals(0, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.brighten((-2209.2495F));
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setLuminence((-3086));
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation(0);
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getGreen());
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation((-2401));
      assertEquals(0, hSLColor0.getSaturation());
      assertEquals(0, hSLColor0.getHue());
      assertEquals(0, hSLColor0.getBlue());
      assertEquals(0, hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.setSaturation(1384);
      assertEquals(255, hSLColor0.getSaturation());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initRGBbyHSL((-3086), 2295, 0);
      hSLColor0.reverseColor();
      assertEquals(101, hSLColor0.getHue());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(0, (-1), 1);
      hSLColor0.setLuminence(1799);
      hSLColor0.reverseColor();
      assertEquals(255, hSLColor0.getRed());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(203, (-372), 0);
      assertEquals((-372), hSLColor0.getGreen());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(1622, (-1257), 1659);
      assertEquals(1622, hSLColor0.getRed());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      hSLColor0.initHSLbyRGB(1738, 1738, 1738);
      assertEquals(1738, hSLColor0.getBlue());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getHue();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getGreen();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getRed();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getSaturation();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getLuminence();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      HSLColor hSLColor0 = new HSLColor();
      int int0 = hSLColor0.getBlue();
      assertEquals(0, int0);
  }
}
