/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 08 21:02:48 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ChunkedLongArray_ESTest extends ChunkedLongArray_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray(3);
      ChunkedLongArray.memStats();
      chunkedLongArray0.toString();
      chunkedLongArray0.set(20, (long) 3);
      chunkedLongArray0.sort();
      ChunkedLongArray chunkedLongArray1 = new ChunkedLongArray(3);
      // Undeclared exception!
      try { 
        chunkedLongArray0.set(chunkedLongArray1, 3, 508, 6);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray(0);
      String string0 = ChunkedLongArray.memStats();
      //  // Unstable assertion: assertEquals("Allocated memory: 0MB, Allocated unused memory: 0MB, Heap memory used: 43MB, Max memory: 0MB", string0);
      
      chunkedLongArray0.toString();
      chunkedLongArray0.sort();
      chunkedLongArray0.add(1673L);
      chunkedLongArray0.set(chunkedLongArray0, 0, 499, 6);
      //  // Unstable assertion: assertEquals(505, chunkedLongArray0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray();
      String string0 = chunkedLongArray0.toString();
      assertEquals("ChunkedLongArray(0 entries, 0 chunks, 0MB)", string0);
      
      ChunkedLongArray chunkedLongArray1 = new ChunkedLongArray(20);
      chunkedLongArray0.set(chunkedLongArray1, (-2768), (-5171), (-2247));
      assertEquals(0, chunkedLongArray0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray((-928));
      long[] longArray0 = new long[7];
      longArray0[0] = (long) (-928);
      longArray0[1] = (long) 20;
      // Undeclared exception!
      try { 
        chunkedLongArray0.set(longArray0, (-928), 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray((-1914));
      chunkedLongArray0.size();
      // Undeclared exception!
      try { 
        chunkedLongArray0.add(897L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray(573);
      String string0 = chunkedLongArray0.toString();
      assertEquals("ChunkedLongArray(0 entries, 0 chunks, 0MB)", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = ChunkedLongArray.memStats();
      //  // Unstable assertion: assertEquals("Allocated memory: 0MB, Allocated unused memory: 0MB, Heap memory used: 46MB, Max memory: 0MB", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray(1);
      int int0 = chunkedLongArray0.capacity();
      assertEquals(0, chunkedLongArray0.size());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray();
      // Undeclared exception!
      try { 
        chunkedLongArray0.get(2471);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 2471 requested with array length 0
         //
         verifyException("ChunkedLongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray();
      // Undeclared exception!
      try { 
        chunkedLongArray0.set(chunkedLongArray0, 2631, 20, 20);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray(15);
      chunkedLongArray0.set(15, (long) 15);
      chunkedLongArray0.sort();
      assertEquals(32768, chunkedLongArray0.capacity());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ChunkedLongArray chunkedLongArray0 = new ChunkedLongArray((-775));
      long[] longArray0 = new long[7];
      chunkedLongArray0.set(longArray0, (-775), (-775), (-775));
      assertEquals(0, chunkedLongArray0.size());
      assertEquals(0, chunkedLongArray0.capacity());
  }
}
