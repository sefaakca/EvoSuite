/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 06 13:30:39 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StringReader_ESTest extends StringReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      assertTrue(stringReader0.markSupported());
      
      try { 
        stringReader0.reset();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.reset();
      stringReader0.close();
      char[] charArray0 = new char[2];
      try { 
        stringReader0.read();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("x>U7ji<uY1ETYZz`j");
      char[] charArray0 = new char[4];
      charArray0[0] = '=';
      charArray0[1] = '3';
      charArray0[2] = 'i';
      charArray0[3] = 'H';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 0, (-1471));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringReader stringReader0 = new StringReader("!8^q");
      stringReader0.close();
      try { 
        stringReader0.mark(0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Stream closed");
      stringReader0.close();
      try { 
        stringReader0.ready();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringReader stringReader0 = new StringReader("]C6AUQxwAfsTiBYgJ4");
      char[] charArray0 = new char[1];
      stringReader0.ready();
      charArray0[0] = '\\';
      stringReader0.read(charArray0);
      stringReader0.mark(0);
      assertTrue(stringReader0.markSupported());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      try { 
        stringReader0.skip((-1317L));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringReader stringReader0 = new StringReader("jdkSaR9<~RBf%");
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = '\'';
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, 746, 746);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      char[] charArray0 = new char[3];
      charArray0[0] = '/';
      charArray0[1] = 'P';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", (-1), (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      stringReader0.reset();
      stringReader0.ready();
      stringReader0.reset();
      assertTrue(stringReader0.markSupported());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("r-@_1(7hv:@");
      boolean boolean0 = stringReader0.ready();
      assertTrue(boolean0);
      
      stringReader0.reset();
      int int0 = stringReader0.read();
      assertEquals(114, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      stringReader0.skip(0L);
      stringReader0.reset();
      stringReader0.close();
      char[] charArray0 = new char[1];
      charArray0[0] = '.';
      try { 
        stringReader0.read(charArray0, (-4128), (-4128));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Stream closed");
      stringReader0.reset();
      long long0 = stringReader0.skip((-592L));
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Stream closed");
      long long0 = stringReader0.skip(1144L);
      assertEquals(13L, long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringReader stringReader0 = new StringReader("hmwxiw,Io,}QmG");
      stringReader0.mark((-156));
      assertTrue(stringReader0.markSupported());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Y%8o(YwB`?");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        stringReader0.read(charArray0, (-950), (-950));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("Stream closed");
      boolean boolean0 = stringReader0.markSupported();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      boolean boolean0 = stringReader0.ready();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T=F&2");
      assertTrue(stringReader0.markSupported());
  }
}
