/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 17 10:31:27 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.io.CharArrayReader;
import java.io.LineNumberReader;
import java.io.PushbackReader;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MyTokenizer_ESTest extends MyTokenizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = MyTokenizer.show(685);
      assertEquals("\u02AD", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = MyTokenizer.show(10);
      assertEquals("end of line", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e");
      char[] charArray0 = new char[7];
      stringReader0.read(charArray0);
      MyTokenizer myTokenizer0 = new MyTokenizer(stringReader0);
      boolean boolean0 = myTokenizer0.atEOF();
      assertEquals((-1), myTokenizer0.ttype);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      MyTokenizer myTokenizer0 = new MyTokenizer(stringReader0);
      myTokenizer0.atEOL();
      assertEquals((-1), myTokenizer0.ttype);
      
      boolean boolean0 = myTokenizer0.atEOF();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringReader stringReader0 = new StringReader("e");
      MyTokenizer myTokenizer0 = new MyTokenizer(stringReader0);
      boolean boolean0 = myTokenizer0.atEOF();
      assertEquals((-3), myTokenizer0.ttype);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      MyTokenizer myTokenizer0 = new MyTokenizer(stringReader0);
      myTokenizer0.atEOL();
      boolean boolean0 = myTokenizer0.atEOL();
      assertEquals((-1), myTokenizer0.ttype);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[5] = '8';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      MyTokenizer myTokenizer0 = new MyTokenizer(charArrayReader0);
      int int0 = myTokenizer0.nextToken();
      assertEquals((-2), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[1] = 'S';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      PushbackReader pushbackReader0 = new PushbackReader(charArrayReader0);
      MyTokenizer myTokenizer0 = new MyTokenizer(pushbackReader0);
      myTokenizer0.consumeToEOL();
      assertEquals((-1), myTokenizer0.ttype);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      LineNumberReader lineNumberReader0 = new LineNumberReader(charArrayReader0, 2396);
      MyTokenizer myTokenizer0 = new MyTokenizer(lineNumberReader0);
      int int0 = myTokenizer0.nextToken();
      assertEquals((-1), int0);
  }
}
