/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 16 15:21:13 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharArrayWriter_ESTest extends CharArrayWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1108);
      charArrayWriter0.write("null");
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('+');
      charArrayWriter0.write(1108);
      charArrayWriter0.toString();
      charArrayWriter1.flush();
      char[] charArray0 = new char[6];
      charArray0[0] = '+';
      charArray0[1] = '+';
      charArray0[2] = '+';
      charArray0[3] = '+';
      charArray0[4] = '+';
      charArray0[5] = '+';
      // Undeclared exception!
      try { 
        charArrayWriter1.write(charArray0, 0, 3751);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      URI uRI0 = MockURI.create("lkLSVoZar3JeR");
      URI uRI1 = MockURI.parseServerAuthority(uRI0);
      MockURI.getFragment(uRI1);
      charArrayWriter0.append((CharSequence) null);
      assertEquals(4, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.reset();
      charArrayWriter0.size();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('V');
      charArrayWriter1.reset();
      charArrayWriter1.writeTo(charArrayWriter0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'V';
      charArrayWriter0.write(charArray0);
      CharArrayWriter charArrayWriter2 = charArrayWriter1.append('V');
      charArrayWriter2.append('V');
      // Undeclared exception!
      try { 
        charArrayWriter1.write(charArray0, 0, (-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) null);
      // Undeclared exception!
      try { 
        charArrayWriter1.append((CharSequence) null, (-1920), (-1920));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      try { 
        charArrayWriter0.append((CharSequence) null, (-1), (-559));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('%');
      charArrayWriter0.append('%');
      char[] charArray0 = charArrayWriter1.toCharArray();
      charArrayWriter1.writeTo(charArrayWriter0);
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, (-452), 172);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('.');
      charArrayWriter1.writeTo(charArrayWriter0);
      assertEquals(2, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.toString();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) "");
      charArrayWriter1.writeTo(stringWriter0);
      assertEquals("", stringWriter0.toString());
      assertEquals(0, charArrayWriter1.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      charArrayWriter0.count = 0;
      charArrayWriter0.flush();
      char[] charArray0 = charArrayWriter0.toCharArray();
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, 935, 0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.close();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.size();
      charArrayWriter0.write("", 0, 0);
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.append('0');
      charArrayWriter0.reset();
      // Undeclared exception!
      try { 
        charArrayWriter0.write((char[]) null, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.write("A&9oor(`WV)f");
      charArrayWriter0.toCharArray();
      assertEquals(12, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.toString();
      // Undeclared exception!
      try { 
        charArrayWriter0.append((CharSequence) "", (-853), (-853));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = null;
      try {
        charArrayWriter0 = new CharArrayWriter((-361));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -361
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char[] charArray0 = charArrayWriter0.toCharArray();
      assertArrayEquals(new char[] {}, charArray0);
  }
}
