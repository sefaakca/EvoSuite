/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 17 13:30:30 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharArrayWriter_ESTest extends CharArrayWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) null, 0, 0);
      assertEquals(0, charArrayWriter1.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      // Undeclared exception!
      try { 
        charArrayWriter0.append((CharSequence) "", 1619, 0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.append((CharSequence) null);
      assertEquals(4, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append((CharSequence) "");
      assertEquals(0, charArrayWriter1.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      try { 
        charArrayWriter0.write("", 2217, 2217);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.write(1075);
      charArrayWriter0.writeTo(charArrayWriter0);
      assertEquals(2, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char[] charArray0 = new char[4];
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, 0, 3916);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.count = (-1121);
      // Undeclared exception!
      try { 
        charArrayWriter0.writeTo(charArrayWriter0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      try { 
        charArrayWriter0.write((char[]) null, (-1054), (-1054));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      charArrayWriter0.write(0);
      charArrayWriter0.writeTo(charArrayWriter0);
      assertEquals(2, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = null;
      try {
        charArrayWriter0 = new CharArrayWriter((-2984));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -2984
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      charArrayWriter0.writeTo(charArrayWriter0);
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.flush();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.append('g');
      assertEquals(1, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      charArrayWriter0.close();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      String string0 = charArrayWriter0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      int int0 = charArrayWriter0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.reset();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char[] charArray0 = charArrayWriter0.toCharArray();
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, 1075, 1075);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }
}
