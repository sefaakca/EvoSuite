/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 08 21:19:04 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharArrayWriter_ESTest extends CharArrayWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = '+';
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, 0, (-5336));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char[] charArray0 = new char[1];
      charArray0[0] = ';';
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, 0, 1159);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      char[] charArray0 = new char[2];
      charArray0[0] = 'K';
      charArray0[1] = ')';
      charArrayWriter0.write(charArray0);
      charArrayWriter0.append((CharSequence) null, 0, 0);
      charArrayWriter0.toCharArray();
      assertEquals(2, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockFile mockFile0 = new MockFile("d0mn/(L=fy5Oyo\"1f'", "d0mn/(L=fy5Oyo\"1f'");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      charArrayWriter0.writeTo(mockFileWriter0);
      charArrayWriter0.toString();
      charArrayWriter0.flush();
      charArrayWriter0.close();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      char[] charArray0 = charArrayWriter0.toCharArray();
      // Undeclared exception!
      try { 
        charArrayWriter0.write(charArray0, 1, 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      charArrayWriter0.count = 0;
      charArrayWriter0.reset();
      charArrayWriter0.append('G');
      charArrayWriter0.append((CharSequence) null);
      assertEquals(5, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('y');
      // Undeclared exception!
      try { 
        charArrayWriter1.write((char[]) null, (-2790), (-3505));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      String string0 = charArrayWriter0.toString();
      assertEquals("", string0);
      
      int int0 = charArrayWriter0.size();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = null;
      try {
        charArrayWriter0 = new CharArrayWriter((-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -1
         //
         verifyException("CharArrayWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      CharArrayWriter charArrayWriter1 = charArrayWriter0.append('c');
      charArrayWriter1.writeTo(charArrayWriter0);
      assertEquals(2, charArrayWriter1.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.close();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.count = 1;
      charArrayWriter0.toString();
      charArrayWriter0.reset();
      charArrayWriter0.toCharArray();
      assertEquals(0, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      URI uRI0 = MockURI.URI("");
      URI uRI1 = MockURI.resolve(uRI0, "");
      MockURI.getUserInfo(uRI1);
      // Undeclared exception!
      try { 
        charArrayWriter0.append((CharSequence) null, 0, (-810));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.toString();
      charArrayWriter0.append((CharSequence) "[]");
      assertEquals(2, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.writeTo(charArrayWriter0);
      charArrayWriter0.write(1);
      charArrayWriter0.append((CharSequence) null);
      assertEquals(5, charArrayWriter0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      charArrayWriter0.toString();
      // Undeclared exception!
      try { 
        charArrayWriter0.append((CharSequence) "", 453, 453);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
