/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 13 19:51:20 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Inflection_ESTest extends Inflection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = Inflection.singularize("Dy;}Hs");
      assertEquals("Dy;}H", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = Inflection.singularize("money");
      assertEquals("money", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = Inflection.pluralize("information");
      assertEquals("information", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = Inflection.pluralize("(%)<r");
      assertEquals("(%)<rs", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Inflection inflection0 = new Inflection("=X", "=X", false);
      String string0 = inflection0.replace("=X");
      assertEquals("=X", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = Inflection.singularize("(%)<r");
      assertEquals("(%)<r", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Inflection inflection0 = new Inflection("=X", "=X", false);
      boolean boolean0 = inflection0.match("zNqiCL& 9Ew Rl");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Inflection inflection0 = new Inflection("(%)<r");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Inflection inflection0 = new Inflection("de-!~", "de-!~");
  }
}
