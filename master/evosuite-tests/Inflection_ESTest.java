/*
 * This file was automatically generated by EvoSuite
 * Sun Aug 27 18:51:14 GMT 2017
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Inflection_ESTest extends Inflection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = Inflection.singularize("$1$2sis");
      assertEquals("$1$2si", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = Inflection.singularize("rice");
      assertEquals("rice", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = Inflection.singularize("~");
      assertEquals("~", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = Inflection.pluralize("rice");
      assertEquals("rice", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = Inflection.pluralize("~");
      assertEquals("~s", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Inflection inflection0 = new Inflection("',/NX<IorS$", "',/NX<IorS$", false);
      // Undeclared exception!
      try { 
        inflection0.replace((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Inflection inflection0 = new Inflection("", "", false);
      boolean boolean0 = inflection0.match("");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Inflection inflection0 = new Inflection("~");
      boolean boolean0 = inflection0.match("N=##5WR uHD(~#sBo*`");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Inflection inflection0 = new Inflection("", "HTlhX^");
  }
}
